阻塞I/O、非阻塞I/O和I/O多路复用
阻塞I/O：应用等待
非阻塞I/O：久不久轮询，等待不到返回错误
I/O多路复用：select：复制到内核态慢；集合大小有限；遍历轮询 poll:相比于select用链表存储较大 
epoll:借助三个函数epoll_create是创建一个epoll句 柄；epoll_ctl是注册要监听的事件类型；epoll_wait则是等待事件的产生
通过内核和用户空间共享内存，避免了不断复制的问题；支持的同时连接数上限很高（1G左右的内存支持10W左右的连接数）；
文件描述符就绪时，采用回调机制，避免了轮询（回调函数将就绪的描述符添加到一个链表中，执行epoll_wait时，返回这个链表）；
支持水平触发和边缘触发，采用边缘触发机制时，只有活跃的描述符才会触发回调函数。
